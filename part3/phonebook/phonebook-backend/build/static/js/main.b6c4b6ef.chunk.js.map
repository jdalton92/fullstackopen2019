{"version":3,"sources":["services/persons.js","components/Rows.js","components/Notifications.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Rows","persons","setPersons","setMessage","setClass","map","person","key","name","number","onClick","deletePerson","window","confirm","newPersons","filter","personService","setTimeout","Notification","message","className","App","useState","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","newMessage","useEffect","initialPersons","updateNumber","updateDetails","newDetails","returnedPerson","catch","error","filterPersons","toUpperCase","includes","Notifications","value","onChange","event","target","onSubmit","preventDefault","length","nameObject","Math","random","toString","substr","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6c4b6ef.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\nimport personService from '../services/persons'\n\nconst Rows = ({ persons, setPersons, setMessage, setClass }) => {\n  const handleClick = (deletePerson) => () => {\n    const result = window.confirm(`Delete ${deletePerson.name}?`)\n    if (result) {\n      const newPersons = persons.filter(person =>\n        person.id !== deletePerson.id\n      )\n      personService\n        .remove(deletePerson.id, persons)\n      setPersons(newPersons)\n      setClass('notification-red')\n      setMessage(`Removed ${deletePerson.name}`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3500)\n    } else {\n      return\n    }\n  }\n\n  return (\n    persons.map(person =>\n      <p key={person.id}>{person.name} {person.number}\n        <button onClick={handleClick(person)}>delete</button>\n      </p>\n    )\n  )\n}\n\nexport default Rows","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Rows from './components/Rows'\nimport personService from './services/persons'\nimport Notifications from './components/Notifications'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  const [newMessage, setMessage] = useState(null)\n  const [className, setClass] = useState('notification-green')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const updateNumber = () => {\n    const result = window.confirm(`${newName} is already added to phonebook, replace the \n    old number with a new one?`)\n    if (result) {\n      const currentDetails = persons.filter(person =>\n        person.name === newName)\n      const updateDetails = currentDetails[0]\n      const newDetails = { ...updateDetails, number: newNumber }\n\n      personService\n        .update(updateDetails.id, newDetails)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id === updateDetails.id\n            ? returnedPerson\n            : person))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Updated ${newDetails.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3500)\n        })\n        .catch(error => {\n          setClass('notification-red')\n          setMessage(`Information on ${updateDetails.name} has already removed from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3500)\n        })\n    } else {\n      return\n    }\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    if (persons.filter(person => person.name === newName).length > 0) {\n      updateNumber()\n    } else {\n      const newID = () => '_' + Math.random().toString(36).substr(2, 9);\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n        id: newID(),\n      }\n\n      personService\n        .create(nameObject)\n        .then(data => {\n          setPersons(persons.concat(data))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${nameObject.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3500)\n        })\n    }\n  }\n\n  const filterPersons = persons.filter(person =>\n    person.name.toUpperCase().includes(newSearch.toUpperCase()))\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearchChange = (event) => setNewSearch(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications message={newMessage} className={className} />\n      <div>\n        <form>\n          <div>\n            filter shown with <input value={newSearch} onChange={handleSearchChange} />\n          </div>\n        </form>\n      </div>\n      <div>\n        <h2>add a new</h2>\n        <form onSubmit={addName}>\n          <div>\n            name:\n            <input value={newName} onChange={handleNameChange} />\n          </div>\n          <div>\n            number:\n            <input value={newNumber} onChange={handleNumberChange} />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n      <div>\n        <h2>Numbers</h2>\n        <Rows\n          persons={filterPersons}\n          setPersons={setPersons}\n          setMessage={setMessage}\n          setClass={setClass}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}